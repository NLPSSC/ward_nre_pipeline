import os
import tempfile
from typing import Any

from loguru import logger
from nre_pipeline import setup_logging
from nre_pipeline.pipeline._manager import PipelineManager
from nre_pipeline.processor._noop import NoOpProcessor
from nre_pipeline.reader._filesystem import FileSystemReader
from nre_pipeline.writer.database._sqlite import SQLiteNLPWriter


def run() -> int:
    """
    Main entry point for the NRE Pipeline.

    Args:
        args: Command line arguments parsed by argparse

    Returns:
        int: Exit code (0 for success, non-zero for error)
    """
    setup_logging(True)

    logger.info("Starting NRE Pipeline...")
    test_case_path = (
        r"Z:\_\data\corpora\ocred_docs_from_pubmed\Buffalo_Med_J_Mon_Rev_Med_Surg_Sci"
    )
    with tempfile.TemporaryDirectory() as temp_dir:
        db_path = os.path.join(temp_dir, "test.db")
        try:
            with PipelineManager(
                num_processor_workers=4,
                processor=NoOpProcessor,
                reader=FileSystemReader.create_reader(
                    path=r"Z:\_\data\corpora\ocred_docs_from_pubmed",
                    batch_size=1000,
                    extensions=[".txt"],
                ),
                writer=SQLiteNLPWriter.create_writer(db_path=db_path),
            ) as manager:
                manager.run()
            logger.info("Pipeline completed successfully.")
            return 0

        except Exception as e:
            logger.error(f"Pipeline failed: {e}")
            return 1


if __name__ == "__main__":
    run()
